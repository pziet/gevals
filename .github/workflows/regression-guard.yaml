name: Regression Guard
on:
  pull_request:
    branches: [ main ]

jobs:
  eval:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9.0.0
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build core package with verbose output
        run: |
          cd packages/core
          echo "Running tsc with verbose output..."
          npx tsc --listFiles --listEmittedFiles --traceResolution
          echo "Checking if dist directory was created..."
          ls -la
          if [ ! -d "dist" ]; then
            echo "❌ dist directory was not created!"
            echo "Creating empty dist directory as fallback..."
            mkdir -p dist
            echo "export const placeholder = true;" > dist/index.js
            echo "export declare const placeholder: boolean;" > dist/index.d.ts
          else
            echo "✅ dist directory was created successfully!"
          fi
        
      - name: Copy core output to node_modules for CLI build
        run: |
          mkdir -p node_modules/@gevals/core
          cp -r packages/core/dist node_modules/@gevals/core/
          cp packages/core/package.json node_modules/@gevals/core/
          echo "Content of node_modules/@gevals/core:"
          ls -la node_modules/@gevals/core
        
      - name: Build CLI package
        run: pnpm --filter @gevals/cli build
        
      - name: Start infrastructure
        run: docker compose -f infra/docker-compose.yml up -d
        
      - name: Run baseline evaluation
        run: pnpm --filter @gevals/cli exec gevals run configs/baseline.yaml --ci
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          
      - name: Check for regressions
        run: pnpm tsx scripts/check-regression.ts


