name: Regression Guard
on:
  pull_request:
    branches: [ main ]

jobs:
  eval:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9.0.0
          
      - name: Install dependencies
        run: pnpm install
          
      - name: Build all packages
        run: pnpm run build
        
      - name: Start infrastructure
        run: docker compose -f infra/docker-compose.yml up -d
        
      - name: Start worker process
        id: start_worker
        run: |
          # Start worker using the same command as local development
          echo "Starting worker process..."
          pnpm worker:dev > worker.log 2>&1 &
          echo $! > worker_pid
          echo "worker_pid=$!" >> $GITHUB_OUTPUT
          
          # Give worker time to initialize
          sleep 5
          # Display first few log lines to verify startup
          head -10 ../../worker.log
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        
      - name: Run baseline evaluation
        run: |
          # Clean baseline results
          rm -rf results/baseline
          
          # Run evaluation using CLI via npm script
          pnpm cli run configs/baseline/baseline.yaml
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          
      - name: Check for regressions
        run: pnpm tsx scripts/check-regression.ts
        
      - name: Stop worker process
        if: always() && steps.start_worker.outputs.worker_pid != ''
        run: |
          echo "Worker logs:"
          cat worker.log
          kill $(cat worker_pid) || echo "Worker process already stopped"


