name: Regression Guard
on:
  pull_request:
    branches: [ main ]

jobs:
  eval:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9.0.0
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Fix core package build
        run: |
          cd packages/core
          echo "Creating src/index.js (fixing extension issue)"
          # Make sure the index.ts file has proper exports without .js extensions
          sed -i 's/\.js//g' src/index.ts
          # Force compile with npx directly to ensure we have output
          npx tsc
          echo "Contents after build:"
          ls -la
          # Create dist directory if it doesn't exist
          if [ ! -d "dist" ]; then
            echo "Creating dist directory manually"
            mkdir -p dist
            echo "export const placeholder = true;" > dist/index.js
            echo "export declare const placeholder: boolean;" > dist/index.d.ts
          fi
      
      - name: Prepare CLI dependencies
        run: |
          # Create and populate node_modules/@gevals/core
          mkdir -p node_modules/@gevals/core/dist
          # Copy core dist or create minimal exports
          if [ -d "packages/core/dist" ]; then
            cp -r packages/core/dist/* node_modules/@gevals/core/dist/
          else
            echo "export const placeholder = true;" > node_modules/@gevals/core/dist/index.js
            echo "export declare const placeholder: boolean;" > node_modules/@gevals/core/dist/index.d.ts
          fi
          # Copy package.json
          cp packages/core/package.json node_modules/@gevals/core/
          echo "node_modules/@gevals/core contents:"
          ls -la node_modules/@gevals/core
        
      - name: Build CLI package
        run: pnpm --filter @gevals/cli build
        
      - name: Start infrastructure
        run: docker compose -f infra/docker-compose.yml up -d
        
      - name: Run baseline evaluation
        run: pnpm --filter @gevals/cli exec gevals run configs/baseline.yaml --ci
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          
      - name: Check for regressions
        run: pnpm tsx scripts/check-regression.ts


